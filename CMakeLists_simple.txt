cmake_minimum_required(VERSION 3.10)
project(FlightControls_Alternatives_Simple)

# 设置C++标准
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# 查找Qt5 - 只要求核心组件
find_package(Qt5 REQUIRED COMPONENTS Core Widgets Gui)

# 查找X11库
find_package(X11 REQUIRED)

# 包含目录
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/src)
include_directories(${X11_INCLUDE_DIR})

# 设置Qt MOC、UIC、RCC
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTORCC ON)

# 方案1: 窗口管理器演示（独立构建，避免与原始文件冲突）
add_executable(window_manager_simple
    src/WindowManager.cpp
    src/WindowManager.h
    examples/window_manager_simple.cpp
)

# 排除原始文件，避免链接冲突
set_target_properties(window_manager_simple PROPERTIES 
    EXCLUDE_FROM_ALL FALSE
    OUTPUT_NAME "window_manager_simple"
)

target_link_libraries(window_manager_simple
    Qt5::Core
    Qt5::Widgets
    Qt5::Gui
    ${X11_LIBRARIES}
)

# 方案3: 虚拟桌面演示（Ubuntu 18.04专用，独立构建）
add_executable(virtual_desktop_ubuntu_demo
    src/VirtualDesktopManager.cpp
    src/VirtualDesktopManager.h
    examples/virtual_desktop_ubuntu_demo.cpp
)

# 排除原始文件，避免链接冲突
set_target_properties(virtual_desktop_ubuntu_demo PROPERTIES 
    EXCLUDE_FROM_ALL FALSE
    OUTPUT_NAME "virtual_desktop_ubuntu_demo"
)

target_link_libraries(virtual_desktop_ubuntu_demo
    Qt5::Core
    Qt5::Widgets
    Qt5::Gui
    ${X11_LIBRARIES}
)

# 检查Qt WebEngine是否可用
find_package(Qt5WebEngineWidgets QUIET)
if(Qt5WebEngineWidgets_FOUND)
    message(STATUS "Qt5WebEngineWidgets found - building full alternatives demo")
    
    # 完整演示程序（需要WebEngine）
    add_executable(alternatives_demo
        src/WindowManager.cpp
        src/WindowManager.h
        src/TabBasedLauncher.cpp
        src/TabBasedLauncher.h
        src/VirtualDesktopManager.cpp
        src/VirtualDesktopManager.h
        examples/alternative_main.cpp
    )

    target_link_libraries(alternatives_demo
        Qt5::Core
        Qt5::Widgets
        Qt5::Gui
        Qt5::WebEngineWidgets
        ${X11_LIBRARIES}
    )
    
    # 编译选项
    target_compile_options(alternatives_demo PRIVATE -Wall -Wextra -Wno-unused-parameter)
    
    set(INSTALL_TARGETS window_manager_simple virtual_desktop_ubuntu_demo alternatives_demo)
else()
    message(STATUS "Qt5WebEngineWidgets not found - skipping TabBasedLauncher")
    set(INSTALL_TARGETS window_manager_simple virtual_desktop_ubuntu_demo)
endif()

# 编译选项
target_compile_options(window_manager_simple PRIVATE -Wall -Wextra -Wno-unused-parameter)
target_compile_options(virtual_desktop_ubuntu_demo PRIVATE -Wall -Wextra -Wno-unused-parameter)

# 安装目标
install(TARGETS ${INSTALL_TARGETS}
    RUNTIME DESTINATION bin
)

# 打包配置
set(CPACK_PACKAGE_NAME "FlightControls_Alternatives_Simple")
set(CPACK_PACKAGE_VERSION "1.0.0")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Flight Controls Alternative Launchers - Simple Version")
set(CPACK_PACKAGE_VENDOR "FlightControls Team")

include(CPack)

# 输出构建信息
message(STATUS "=== FlightControls Alternatives 构建配置 ===")
message(STATUS "C++ 标准: ${CMAKE_CXX_STANDARD}")
message(STATUS "Qt5 版本: ${Qt5_VERSION}")
message(STATUS "构建目标: ${INSTALL_TARGETS}")
message(STATUS "X11 库路径: ${X11_LIBRARIES}")
message(STATUS "==========================================") 